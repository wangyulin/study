<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

    <!--<include resource="org/springframework/boot/logging/logback/base.xml" />-->

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name = "LOG_HOME" value = "/Users/wangyulin/workDir/miui/study/spring-boot-demo/logs"/>
    <property name = "LOG_FILE" value = "${LOG_HOME}/spring-boot-demo.log"/>
    <property name = "HELLO_LOG" value = "${LOG_HOME}/hello.log"/>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>


    <!-- console log appender -->
    <appender name = "STDOUT" class = "ch.qos.logback.core.ConsoleAppender">
        <encoder class = "ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--<pattern>%-20d{yyyy-MM-dd HH:mm:ss.SSS} [%-30thread] %-5level %logger{50} - %msg%n</pattern>-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name = "FILE" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${LOG_FILE}</file>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%i</fileNamePattern>
            <FileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 只保存最近3个月的文件 -->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
        <triggeringPolicy class = "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>1MB</MaxFileSize>
        </triggeringPolicy>
        <!-- true，日志被追加到文件结尾，如果是 false，清空现存文件 -->
        <append>true</append>
    </appender>

    <appender name = "HELLO_FILE" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
        <file>${HELLO_LOG}</file>
        <rollingPolicy class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HELLO_LOG}.%i</fileNamePattern>
            <FileNamePattern>${HELLO_LOG}.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 只保存最近3个月的文件 -->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
        <triggeringPolicy class = "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>1MB</MaxFileSize>
        </triggeringPolicy>
        <!-- true，日志被追加到文件结尾，如果是 false，清空现存文件 -->
        <append>true</append>
    </appender>

    <logger name="org.hibernate.type" level="ERROR" additivity="false">
        <appender-ref ref="STDOUT" />
    </logger>

    <!--<logger name="org.hibernate.stat" level="DEBUG" additivity="false">
        <appender-ref ref="STDOUT" />
    </logger>-->

    <root level = "debug">
        <appender-ref ref = "STDOUT"/>
        <appender-ref ref = "FILE"/>
    </root>

    <!--<logger name = "hello" level = "INFO">
        <appender-ref ref = "HELLO_FILE"/>
    </logger>-->

</configuration>