<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com.wyl.demo.server" />
	<context:annotation-config />
	<mvc:annotation-driven />

	<!-- for processing requests with annotated controller methods and set Message 
		Convertors from the list of convertors -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- To convert JSON to Object and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>
	
	<!-- interceptor setting -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean class="com.wyl.demo.server.interceptor.AllInterceptor" />
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.wyl.demo.server.interceptor.MyInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<aop:aspectj-autoproxy/>
	<aop:config>
        <!-- Spring 2.0 可以用 AspectJ 的语法定义 Pointcut，这里拦截 service 包中的所有方法 -->
        <aop:advisor id="methodTimeLog" advice-ref="methodTimeAdvice" 
        pointcut="execution(* *..wyl..*(..)) and !execution(* com.wyl.demo.server.interceptor..*.*(..))"/>
    </aop:config>
 
    <bean id="methodTimeAdvice" class="com.wyl.demo.server.interceptor.MethodTimeAdvice"/>

</beans>